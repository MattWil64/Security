Two main ways to configure
Command Line Method:
ssh -M -S /tmp/s root@<IP ADDRESS> <TUNNEL COMMANDS -R or -L>
-o 'ControlPath=/tmp/s'
-M -S /tmp/s

Configuration File Method:
/ssh_config
HostName machine1.example.org
ControlPath ~/.ssh/controlmasters/%r@%h:%p
ControlMaster auto
ControlPersist 10m


USER ENUMERATION
net user
cat /etc/passwd


PROCESS ENUMERATION
tasklist /v
ps -elf

SERVICE ENUMERATION
tasklist /svc
chkconfig

NETWORK CONNECTION ENUMERATION
ipconfig /all
ifconfig -a

DATA EXFILTRATION
Logging
<command> | tee
 
Obfuscation
<command> | %{$_ -replace 'a','b' -replace 'b','c' -replace 'c','d'} > translated.out certutil
<command> | tr 'a-zA-Z0-9' 'b-zA-Z0-9a' > shifted.txt
<command> | base64

Encryption Transport Methods
scp

Jobs
/etc/crontab
/var/spool/crontab

Logs
/etc/rsyslog.conf
/etc/rsyslog.d

##Windows

#user
net user

#read the reg keys
reg query
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce


#query services
sc query 
get_wmiobject win32_service
get-wmiobject -list
get-wmiobject -class win32_process






egrep -v '10:49*| 15:15:15' auth.log > auth.log2; cat auth.log2 > auth.log; rm auth.log2 +
cp auth.log > auth.log2; sed -i 's/10.16.10.93/136.132.1.1/g' auth.log2; cat auth.log2 > auth.log +
CLEAN - YOUR TURN
1) Create a failed ssh log on your RE_Linux.

2) Utilizing the command line clean the log of the assocated log entries of the failed ssh event.

3) Maintain log files orignal Inode

TIMESTOMP NIX
Access: updated when opened or used (grep, ls, cat, etc)

Modify: update content of file or saved

Change: file attribute change, file modified, moved, owner, permission


=====================================================================================================================================================

##Linux Enumeration

uname -a 	~ shows host info
ip addr		~ shows ip address, some ip addresses may be open-stack, not target space
ss -ntlp		~ shows open ports and connections
find / -name <name> 2>/dev/null
cat /etc/passwd	~ tells you users on the machine, their home directories, and what type of shell they launch with
cat /etc/groups	~ tells you what users are a part of which groups
sudo -l			~ tells you what you can sudo
cat /etc/shadow	~ need privileges, shows user passwords, they're encrypted though, use john the ripper
sudo ls -la /root	~ root's home directory, lotta flags gonna be there, need privileges though
ls -la /etc/*.conf	~ configuration files for services, can find out how certain services are configured
ls -la /bin		~ user binaries
ls -la /tmp		~ world-writable directory, any user can use these directories
ls -la /var/tmp		~ world-writable directory, any user can use this directory
/etc/networks		~ for network information
/etc/resolv.conf	~ for DNS information
/etc/hosts		~ to see if anyone is configured for specific hosts/ip

crontab -l	~ list jobs for specific user
/var/spool/cron/crontabs	~ need to have privileges to view crontabs, we shouldn't need to create cronjobs
cat /etc/crontab	~ do not need privileges to view, scripts are placed in here to be ran
	~ minute, hour, day of month, month, day of week
 
syslog, syslog-ng, rsyslog
cd /var/log	~ where logs are stored
/var/log/auth.log	~ where authentication is logged, requires privileges

===============================================================================================================================================

## Windows enumeration

net user /?		~ manage/view user accounts
net localgroup /?	~ manage user groups or view members of groups
net localgroup Administrators		~ if we wanted to view users within the 'Administrators' group
net localgroup "Remote Desktop User"	~ if we wanted to view who is able to use RDP

dir -hidden OR dir /a:h	~ to view hidden files within the current directory
dir /R		~ to view alternate data streams on files, if there are any
where where.exe	~ like 'which' in Linux, finds certain binaries, won't if they aren't a windows environmental variable
dir | findstr <string>	~ to search for files

reg query HKU	~ reg query allows us to query into registry locations
reg query HKLM\Software	~ **USE BACKSLASH, NOT FORWARD SLASH**
reg query HKCU\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN	~ important
	~ shows what services/processes will run every time the CURRENT USER starts the machine
reg query HKLM\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN OR RUNONCE
	~ shows what services/processes will start once the machine is started
		~ RunOnce deletes the key as soon as the command is ran, could find in Application Logs

tasklist	~ displays a list of currently running processes
tasklist /svc	~ displays services alongside processes	/v if we want verbose
query /process	~ queries processes and shows who is running them
tasklist /svc /fo table <or list>
sc query /?	~ used for communicating with the Service Control Manager and services
sc qc <service>	~ shows properties of services, what it's executing
sc queryex

ipconfig 	~ shows ip information
ipconfig /all	~ shows more ip information
netstat		~ shows open ports and connections
netstat -ano | findstr /i <port>		~ to view info about specific port

ipconfig 	~ shows ip information
ipconfig /all	~ shows more ip information
netstat		~ shows open ports and connections
netstat -ano | findstr /i <port>		~ to view info about specific port



